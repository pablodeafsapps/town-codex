apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'   // Anko
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'   // Realm

android {
    compileSdkVersion rootProject.ext.compilesdk_version
    buildToolsVersion rootProject.ext.buildtools_version
    defaultConfig {
        applicationId "com.altran.towncodex"
        minSdkVersion rootProject.ext.minsdk_version
        targetSdkVersion rootProject.ext.targetsdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Although Gradle will compile any Kotlin files it finds in 'src/main/java', it's good practice
    // to store your Kotlin files in card_view_custom_layout dedicated Kotlin directory
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportlibrary_version"
    // Including Kotlin and Anko
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.ext.kotlin_version"
    implementation "org.jetbrains.anko:anko:$rootProject.ext.anko_version"
    // Material Design explicit dependencies
    implementation "com.android.support:design:$rootProject.ext.supportlibrary_version"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintlayout_version"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportlibrary_version"
    // Including 3rd party libraries (Cicerone, Fuel, Gson, Picasso)
    implementation "ru.terrakok.cicerone:cicerone:$rootProject.ext.cicerone_version"
    implementation "com.github.kittinunf.fuel:fuel-android:$rootProject.ext.fuel_version"
    implementation "com.github.kittinunf.fuel:fuel-rxjava:$rootProject.ext.fuel_version"
    implementation "com.github.kittinunf.fuel:fuel-gson:$rootProject.ext.fuel_version"   // Gson parsing
    implementation "com.squareup.picasso:picasso:$rootProject.ext.picasso_version"
    // Including RxJava 2 and RxKotlin
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.ext.rxkotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroid_version"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rootProject.ext.rxbinding_version"
    //--- Dagger2 core dependencies
    implementation "com.google.dagger:dagger:$rootProject.ext.dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2_version"
    //--- Dagger2 Android dependencies
    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.ext.dagger2_version"
    // Required -- JUnit 4 framework and Kotlin for testing
    testImplementation "junit:junit:$rootProject.ext.junit_version"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockito_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espresso_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espresso_version"
}
